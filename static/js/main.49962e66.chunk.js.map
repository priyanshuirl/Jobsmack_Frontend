{"version":3,"sources":["header.js","axios.js","jobcards.js","swipebuttons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","color","classname","href","instance","axios","create","baseURL","Jobcards","useState","job","setjob","loading","setloading","useLayoutEffect","a","get","req","data","fetchdata","map","preventSwipe","onSwipe","dir","nameToDelete","jobname","console","log","onCardLeftScreen","name","company","salary","require","SwipeButtons","onClick","window","location","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAsBeA,MAhBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAmBC,SAAS,QAAQF,UAAU,eAAeG,MAAM,gBAEvE,sBAAKH,UAAU,OAAf,UACI,0CACA,oBAAGI,UAAU,YAAb,qBAAiC,mBAAGC,KAAM,4CAAT,oCAErC,cAACJ,EAAA,EAAD,UACI,cAAC,IAAD,CAAUC,SAAS,QAAQF,UAAU,eAAeG,MAAM,oB,kECX3DG,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,oCC+CEC,MA9Cf,WACI,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAdAC,2BAAgB,WAAM,4CAClB,4BAAAC,EAAA,sEACsBV,EAAMW,IAAI,qBADhC,OACUC,EADV,OAEIN,EAAOM,EAAIC,MACXL,EAAW,GAHf,4CADkB,uBAAC,WAAD,wBAMlBM,KACD,IAOa,IAAZP,EAEI,oBAAId,UAAU,UAAd,wBAIA,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,qBAAf,SACKY,EAAIU,KAAI,SAAAV,GAAG,OACR,cAAC,IAAD,CACIZ,UAAU,QAEVuB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAnBPC,EAmB2Bd,EAAIe,aAlBrDC,QAAQC,IAAI,aAAeH,GADjB,IAAYA,GAoBFI,iBAAkB,kBAjBtBC,EAiBuCnB,EAAIe,aAhB3DC,QAAQC,IAAIE,EAAO,oBADJ,IAACA,GAYA,SAOI,sBAAK/B,UAAU,OAAf,UACI,6BAAKY,EAAIe,UACT,6BAAKf,EAAIoB,UACT,2CAAcpB,EAAIqB,UAClB,+BAAI,sBAAMjC,UAAU,OAAhB,6BAAJ,IAAmDY,EAAIsB,eATtDtB,EAAIe,iB,8FCHtBQ,MArBf,WACI,OACI,sBAAKnC,UAAU,eAAeoC,QAAS,WAAQC,OAAOC,SAASC,UAA/D,UACI,cAACtC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCTvBsC,MAVf,WACE,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.49962e66.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./Header.css\"\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { IconButton } from '@mui/material';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <IconButton>\r\n                <AccountCircleIcon fontSize=\"large\" className=\"header__icon\" color=\"secondary\" />\r\n            </IconButton>\r\n            <div className=\"logo\">\r\n                <h1>Jobsmack</h1>\r\n                <p classname=\"priyanshu\">Made By <a href={\"https://www.linkedin.com/in/priyanshuirl/\"}>Priyanshu Mishra</a></p>\r\n            </div>\r\n            <IconButton>\r\n                <ChatIcon fontSize=\"large\" className=\"header__icon\" color=\"secondary\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://jobsmack.herokuapp.com/\"\r\n})\r\n\r\nexport default instance;","import React, { useState, useLayoutEffect } from \"react\"\r\nimport \"./jobcards.css\"\r\nimport TinderCard from \"react-tinder-card\"\r\nimport axios from \"./axios\"\r\nfunction Jobcards() {\r\n    const [job, setjob] = useState([])\r\n    const [loading, setloading] = useState(0)\r\n    useLayoutEffect(() => {\r\n        async function fetchdata() {\r\n            const req = await axios.get(\"/jobsmack/cardsup\")\r\n            setjob(req.data)\r\n            setloading(1)\r\n        }\r\n        fetchdata();\r\n    }, [])\r\n    const swipe = (direction, nameToDelete) => {\r\n        console.log(\"removing: \" + nameToDelete);\r\n    }\r\n    const outOfFrame = (name) => {\r\n        console.log(name + \" left the Screen\");\r\n    }\r\n    if (loading === 0) {\r\n        return (\r\n            <h1 className=\"loading\">Loading...</h1>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"jobCards\">\r\n                <div className=\"jobcard__container\">\r\n                    {job.map(job => (\r\n                        <TinderCard\r\n                            className=\"swipe\"\r\n                            key={job.jobname}\r\n                            preventSwipe={[\"up\", \"down\"]}\r\n                            onSwipe={(dir) => swipe(dir, job.jobname)}\r\n                            onCardLeftScreen={() => outOfFrame(job.jobname)}\r\n                        >\r\n                            <div className=\"card\">\r\n                                <h1>{job.jobname}</h1>\r\n                                <h2>{job.company}</h2>\r\n                                <h3>Salary : {job.salary}</h3>\r\n                                <h6><span className=\"span\">Requirements : </span> {job.require}</h6>\r\n                            </div>\r\n                        </TinderCard>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Jobcards;","import React from \"react\"\r\nimport \"./swipebuttons.css\"\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport StarRateIcon from '@mui/icons-material/StarRate';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport { IconButton } from \"@mui/material\";\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\" onClick={() => { window.location.reload(); }}>\r\n            <IconButton className=\"swipeButtons__repeat\">\r\n                <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__left\">\r\n                <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__star\">\r\n                <StarRateIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__right\">\r\n                <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__lightning\">\r\n                <FlashOnIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\nexport default SwipeButtons;","import './App.css';\nimport Header from './header';\nimport Jobcards from './jobcards';\nimport SwipeButtons from './swipebuttons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Jobcards />\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}